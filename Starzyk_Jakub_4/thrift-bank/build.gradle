buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.jruyi.thrift' version '0.4.1'
    id 'com.google.protobuf' version '0.8.8'
}

//apply plugin: 'java'
//apply plugin: 'com.google.protobuf'
//apply plugin: 'idea'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
}



//apply plugin: 'java'
//apply plugin: 'com.google.protobuf'

version '1.0-SNAPSHOT'

sourceCompatibility = 11

//repositories {
//    mavenCentral()
//}

dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.apache.thrift', name: 'libthrift', version: '0.12.0'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.12'
    compile group: 'org.javamoney', name: 'moneta', version: '1.3'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

    compile 'io.grpc:grpc-netty-shaded:1.20.0'
    compile 'io.grpc:grpc-protobuf:1.20.0'
    compile 'io.grpc:grpc-stub:1.20.0'

    compile 'com.google.protobuf:protobuf-java:3.0.0'
    compile 'io.grpc:grpc-stub:1.0.0-pre2'
    compile 'io.grpc:grpc-protobuf:1.0.0-pre2'

//    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
//        compile 'javax.annotation:javax.annotation-api:1.3.2'
//    }

//    protobuf files("lib/protos.tar.gz")
//    protobuf files("ext/")

    testCompile 'junit:junit:4.12'
    // Extra proto source files for test besides the ones residing under
    // "src/test".
//    testProtobuf files("lib/protos-test.tar.gz")
}



compileThrift {
//    main {
        outputDir = file('src/generated/thrift')
//    }
//}
//    sourceDir = file('')
//    generator 'java'
}

sourceSets {

    main.java.srcDirs += 'src/generated/thrift/gen-java'

    main {
        proto {
            srcDirs += 'src/main/protobuf'
        }
    }
}

task rm(type: Delete) {
    delete 'src/generated'
}

protobuf {
    generatedFilesBaseDir = 'src/generated/protobuf'

    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { }
//                python { }
//                remove java
            }
            task.plugins {
                grpc { }
            }
        }
    }

//    generateProtoTasks {
//        ofSourceSet('main')*.plugins {
//            // Apply the "grpc" plugin whose spec is defined above, without
//            // options.  Note the braces cannot be omitted, otherwise the
//            // plugin will not be added. This is because of the implicit way
//            // NamedDomainObjectContainer binds the methods.
//            grpc { }
//        }
//    }
}